module Boss

$include CmdExecute
$include CmdStore
$include CmdType
$include Module
$include Parser       [optional]
$include Program
$include Resolver
$include Scanner
$include Type

uses Boss
uses Console/CommandLineParser

try
  Boss( System.command_line_arguments )
catch (error:CompileError)
  Console.error.println error
  System.exit 1
catch (error:Exception)
  Console.error.println error
  Console.error.println error.stack_trace
  System.exit 1
endTry

class Boss
  PROPERTIES
    command : Rogue::Variant

  METHODS
    method init( args:String[] )
      command = parse_args( args )

      # trace command
      # has //options and possibly //args

      if (command//options//help or command//args.count == 0)
        print_usage
        System.exit 0
      endIf

      local program = Program()

      local err : Exception
      forEach (arg in command//args)
        err = program.parse( File(arg->String) )
        if (err) escapeForEach
      endForEach

      if (not err) err = program.launch

      if (err)
        #err.display
        Global.error.println err
        System.exit 1
      endIf

    method parse_args( args:String[] )->Rogue::Variant
      # This method is unrelated to the Froley Parser
      local command = CommandLineParser().
      [
        option( "--flag",     &alias="-f" )
        option( "--help",     &aliases=["-h","-?"] )
        option( "--setting=", &alias="-s" )
      ].parse( args )
      return command

    method print_usage
      println @|USAGE
               |  boss [OPTIONS] <filepath>
               |
               |OPTIONS
               |  --help, -h, -?
               |    Show this help text.
endClass
