module Boss

class Organizer : Visitor [singleton]
  PROPERTIES

  METHODS
    method organize_program
      (forEach in Program.types).collect_base_types
      (forEach in Program.types).validate_type_hierarchy
      visit_program( Program )

    method organize( procedure:Procedure )
      local type_context = procedure.type_context
      temporarily Program.current_module=type_context.module_context, this_type=type_context
        visit( procedure )
      endTemporarily

    method visit_type( type:Type )
      temporarily this_type = type
        visit( type.definition )
      endTemporarily
      prior.visit_type( type )

    method on_visit_node( cmd:Class )
      (forEach in cmd.members).store( this_type )

    method on_visit( cmd:Procedure )->Cmd
      visit_children( cmd )
      cmd.organize
      return cmd

    method on_visit( cmd:Type )->Cmd
      if (not cmd.module_context)
        return visit( Program.current_module.must_find_type(cmd.t, cmd.name) )
      endIf
      visit_children( cmd )
      return cmd

endClass
